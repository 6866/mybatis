<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="config.mapper.command_content">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!--
        根据id查询得到一个user对象
     -->
    <resultMap id="contents" type="entity.Command_content">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
    </resultMap>
    <update id="updateContent" parameterType="list">
        insert into command_content (id,content) values
        <foreach collection="list" separator="," item="item">
            <if test="item.id != null">
                (#{item.id},#{item.content})

            </if>

        </foreach>
        on duplicate key update content=values(content);

    </update>

    <insert id="insert" parameterType="entity.Command">
        INSERT into command_content VALUES
        <foreach collection="contents" item="item" separator=",">
            <if test="item.id == null">
                (null,#{item.content},#{id})
            </if>
        </foreach>
    </insert>

    <delete id="deleteCommand_id" parameterType="int">
        DELETE FROM command_content WHERE command_id = #{id}
    </delete>

    <delete id="deleteCommand_ids" parameterType="int">
        DELETE  FROM command_content WHERE command_id in(
          <foreach collection="array" separator="," item="item">
              #{item}
          </foreach>
        )

    </delete>

    <delete id="deleteContent" parameterType="int">
        DELETE FROM command_content WHERE id in (
          <foreach collection="array" item="item" separator=",">
              #{item}
          </foreach>

        )
    </delete>

</mapper>